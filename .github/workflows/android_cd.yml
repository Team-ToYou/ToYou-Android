name: Android Firebase CD

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    cd:
        name: Continuous Deployment
        runs-on: ubuntu-latest

        env:
            GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

        steps:
            # 1. Code Checkout
            - name: Checkout code
              uses: actions/checkout@v4

            # 2. Gradle Cache
            - name: Cache Gradle dependencies
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            # 3. JDK 17
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: 17
                  distribution: 'corretto'
                  cache: gradle

            # 4. Grant Execute Permission
            - name: Change gradlew permissions
              run: chmod +x gradlew

            # 5. keystore, google-services
            - name: Decode And Save Keystore Base64
              run: |
                  echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > app/keystore.jks
            - name: Create google-services.json
              run: echo "$GOOGLE_SERVICES_JSON" > app/google-services.json

            # 6. Install Firebase CLI
            - name: Install Firebase CLI
              run: curl -sL https://firebase.tools | bash

            # Add Local Properties
            - name: Add Local Properties
              env:
                  BASE_URL: ${{ secrets.KAKAO_NATIVE_APP_KEY }}
                  AMPLITUDE_API_KEY: ${{ secrets.KAKAO_NATIVE_APP_KEY_MANIFEST }}
              run: |
                  echo -e "kakao_NATIVE_APP_KEY=$KAKAO_NATIVE_APP_KEY\kakao_NATIVE_APP_KEY_MANIFEST=$KAKAO_NATIVE_APP_KEY_MANIFEST" >> local.properties

            # 7. Debug Local Properties Check
            -   name: Debug Local Properties
                run: cat local.properties

            # 8. Release APK Build
            - name: Build Release APK
              run: ./gradlew assembleRelease --stacktrace

            # 9. AAB Artifact Upload
            - name: Upload Release AAB
              uses: actions/upload-artifact@v4
              with:
                  name: release-aab
                  path: app/build/outputs/bundle/release/app-release.aab

            # 10. APK Artifact Upload
            - name: Upload Release APK
              uses: actions/upload-artifact@v4
              with:
                  name: release-apk
                  path: app/build/outputs/apk/release/app-release.apk

            # 11. Firebase App Distribution
            - name: Upload to Firebase App Distribution
              uses: wzieba/Firebase-Distribution-Github-Action@v1
              with:
                  appId: ${{secrets.FIREBASE_APP_ID}}
                  serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
                  groups: test
                  file: app/build/outputs/apk/release/app-release.apk

            # 12. Notify Discord
            - name: Notify Discord
              env:
                  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
              run: |
                  curl -H "Content-Type: application/json" \
                  -X POST \
                  -d '{"content": "🚀 새로운 데모 버전이 Firebase App Distribution에 업로드되었습니다!\nAPK 다운로드: https://appdistribution.firebase.google.com"}' \
                  $DISCORD_WEBHOOK_URL
